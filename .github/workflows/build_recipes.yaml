name: build recipes
on:
  push:
    branches:
      - 'main'
      - 'build_testing'
    paths:
      - 'recipes/**'
  pull_request:
    paths:
      - 'recipes/**'

jobs:

  build_recipes:
    runs-on: ubuntu-latest
    env:
      TARGET_PLATFORM: emscripten-wasm32
      GITHUB_OWNER: "emscripten-forge"
    strategy:
      fail-fast: false

    steps:
      ################################################################
      # SETUP
      ################################################################
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Maximize build space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Delete fortran
        run: sudo apt-get remove gfortran -y

      ################################################################
      # CONFIG
      ################################################################
      - name: Global config
        shell: bash -el {0}
        run: git config --global advice.detachedHead false

      ################################################################
      # MAMBA
      ################################################################
      - name: Install micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: ci_env.yml
          environment-name: ci
          init-shell: bash
          cache-environment: true
          post-cleanup: 'all'

      ################################################################
      # POST ENV INSTALL CONFIG
      ################################################################
      - name: Post env install config
        shell: bash -el {0}
        run: |
          cp $GITHUB_WORKSPACE/.github/workflows/.condarc $HOME
          cp $GITHUB_WORKSPACE/conda_build_config.yaml $HOME

      ################################################################
      # PUSH
      ################################################################
      - name: Build recipes with changes PUSH
        shell: bash -el {0}
        if: github.event_name == 'push'
        run: |
          python -m emci build changed $GITHUB_WORKSPACE/ origin/main~1 origin/main

      ################################################################
      # PULL_REQUEST
      ################################################################
      - name: Build recipes with changes PULL_REQUEST
        shell: bash -el {0}
        # if: github.event_name == 'pull_request'
        run: |
          python -m emci build changed $GITHUB_WORKSPACE/ origin/main HEAD

      ################################################################
      # UPLOAD
      ################################################################
      - name: Upload packages to Quetz
        shell: bash -el {0}
        run: |
          # Loop over {emscripten-wasm32, linux-64, noarch}
          for platform in emscripten-wasm32 linux-64 noarch; do
            if [ -d "${GITHUB_WORKSPACE}/output/${platform}" ]; then
              files=$(ls ${GITHUB_WORKSPACE}/output/${platform}/*.tar.bz2 2> /dev/null)
              if [ -n "$files" ]; then
                for package in $files; do
                  echo "Uploading ${package} for ${platform}"
                  FILE_SHA256=$(sha256sum ${package} | awk '{ print $1 }') && \
                  RESPONSE=$(curl -X 'POST' \
                    "https://beta.mamba.pm/api/channels/emscripten-forge/upload/${package}?sha256=${FILE_SHA256}&force=false" \
                    -H "X-API-Key: ${{secrets.QUETZ_API_KEY}}" \
                    --data-binary @${package} \
                    -w "%{http_code}" \
                    -s) && \
                  BODY=$(echo "$RESPONSE" | sed -e 's/[0-9]*$//') && \
                  STATUS_CODE=$(echo "$RESPONSE" | tail -c 4) && \
                  if [ "$STATUS_CODE" -ne 201 ]; then echo "$BODY"; exit 1; fi
                done
              fi
            fi
          done
